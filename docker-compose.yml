version: '3.7'

services:

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app-network

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      - app-network
    depends_on:
      - zookeeper

    
  backend:
    build: ./backend
    volumes:
      - shared-data:/data
    networks:
      - app-network
    depends_on:
      - kafka
    ports:
      - 8000:8000

  frontend:
    build: ./frontend
    volumes:
      - './:/app'
      - shared-data:/data
      - '/app/node_modules'
    ports:
      - 3000:3000
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - app-network
    depends_on:
      - kafka
      - backend
    command: npm start

  kafka-consumer:
    build: ./kafka_consumer
    volumes:
      - shared-data:/data
    networks:
      - app-network
    ports:
      - 9000:9000
    depends_on:
      - kafka
      - backend
    command: sh -c "sleep 30 && python kafka_consumer.py"
networks:
  app-network:
    external: true
    name: app-network
    driver: bridge

volumes:
  shared-data:
